/*Problem solving patterns are basically approaches from beginning to end to solve a problem. These pattern can help us solve multiple problems but not all problems can be solved using these patterns. Some of the patterns are below:
 
1.Frequency Counter Patterns
2.Multiple Pointers
3.Sliding Window
4.Divide and Conquer
5.Dynamic programming
6.Greedy Algorithm
7.Backtracking
8.Manymore!                             
==========================================================================================================================
Some Self Study For learning patterns:

forEach()==>
--> The forEach() method executes a provided function once for each array element.
 
--> The forEach method basically takes up the inputs indexes as parameter and does whatever it is asked to do as long as 
the indexes exist. It takes three parameters first parameter is the index value and then second is the index itself and 
third is the array itself. We can define a function in the code of forEach() method and that code will execute for each 
item of the array.
For(let element of array ){we can take each element of the array and do with it as per the code in this block }
 
array.indexOf()
The index of method simply returns the index of an item in an array. If the item we are looking for is not available it 
will return -1. indexOff(accepts param here; can except many lines of code inside {})
 
array.splice(start,delete count, item to insertâ€¦)
Splice is used to delete elements in an array. If delete count is zero then defined items on parameter 3 will be added 
from the start index. If only one value is entered then it will be taken as the starting index for deletion of all elements 
to the left.
 
forInLoop: this loop is used to loop over each key of an object. It can be used like
for(let element in object){do whatever is defined in here
to iterate over values console.log(object[element])
// here element is the key the for in loop iterates and return all the keys;
}
*/