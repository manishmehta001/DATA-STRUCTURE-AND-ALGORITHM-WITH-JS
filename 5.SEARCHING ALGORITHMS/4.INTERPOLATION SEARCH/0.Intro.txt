/======================================= Interpolation Search ==========================================/
Algorithm:
    • Interpolation search is similar to binary search, but instead of dividing the array into halves, it tries to estimate the position of the target element based on its value.

Steps:
    • Calculate the position of the target element using a formula:
    • pos = low + ((high - low) / (arr[high] - arr[low])) * (target - arr[low])
    • If the element at pos is the target, return the index.
    • If the target is smaller, repeat the search on the left part; if larger, search on the right.

Use Case:
    • Works well when data is uniformly distributed.

Time Complexity:
    • Best case: O(log log n)
    • Worst case: O(n)

Dry Run Example: Array: [10, 20, 30, 40, 50, 60],Target: 40

Step-by-step:
    • Initial range: low = 0, high = 5
    • Calculate position:
    • pos = 0 + ((5 - 0) / (60 - 10)) * (40 - 10) = 0 + (5 / 50) * 30 = 3
    • Element at index 3 is 40. Found!
